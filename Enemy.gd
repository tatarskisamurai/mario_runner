# enemy.gd ‚Äî —Å—Ç—Ä–µ–ª—è–µ—Ç –≤ —Å—Ç–æ—Ä–æ–Ω—É –∏–≥—Ä–æ–∫–∞ (–ª—é–±–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)
extends KinematicBody2D

export var detection_radius = 300
export var shoot_interval = 1.5
export (PackedScene) var bullet_scene

onready var detection_area = $DetectionArea
onready var shoot_timer = $ShootTimer
onready var shoot_point = $ShootPoint
onready var sprite = $Sprite

var player_in_range = false
var player = null

func _ready():
	print("üéØ –í—Ä–∞–≥: _ready() –∑–∞–ø—É—â–µ–Ω")
	print("–ü—É—Ç—å –∫ bullet_scene: ", bullet_scene)

	if bullet_scene == null:
		print("‚ùå bullet_scene = null! –ó–∞–≥—Ä—É–∑–∏ Bullet.tscn –≤ –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä–µ!")
		return

	var collision_shape = detection_area.get_node("CollisionShape2D")
	if collision_shape:
		collision_shape.shape.radius = detection_radius
		print("‚úÖ –†–∞–¥–∏—É—Å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ", detection_radius)
	else:
		printerr("‚ùå CollisionShape2D –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DetectionArea!")

	detection_area.connect("body_entered", self, "_on_detection_area_body_entered")
	detection_area.connect("body_exited", self, "_on_detection_area_body_exited")
	shoot_timer.connect("timeout", self, "_on_shoot_timer_timeout")


func _on_detection_area_body_entered(body):
	if body.name == "Player":
		player = body
		player_in_range = true
		shoot_timer.start()
		print("‚úÖ –ò–≥—Ä–æ–∫ –≤–æ—à—ë–ª –≤ –∑–æ–Ω—É: ", player.name)


func _on_detection_area_body_exited(body):
	if body == player:
		player_in_range = false
		shoot_timer.stop()
		player = null
		print("‚ùå –ò–≥—Ä–æ–∫ –≤—ã—à–µ–ª –∏–∑ –∑–æ–Ω—ã")


func _on_shoot_timer_timeout():
	print("‚è∞ –¢–∞–π–º–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–ª!")
	if not (player_in_range and player != null and bullet_scene):
		print("‚ùå –£—Å–ª–æ–≤–∏–µ –¥–ª—è —Å—Ç—Ä–µ–ª—å–±—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
		return

	# –í–µ–∫—Ç–æ—Ä –æ—Ç –≤—Ä–∞–≥–∞ –∫ –∏–≥—Ä–æ–∫—É
	var to_player = player.global_position - global_position

	if to_player.length() == 0:
		print("‚ùå –ò–≥—Ä–æ–∫ –≤ —Ç–æ–π –∂–µ —Ç–æ—á–∫–µ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
		return

	# –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
	var direction = to_player.normalized()
	print("‚û°Ô∏è –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ", direction)

	# –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Å–ø—Ä–∞–π—Ç (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ): —Ñ–ª–∏–ø–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ X
	if direction.x > 0:
		sprite.flip_h = true
	else:
		sprite.flip_h = false

	# –°–º–µ—â–µ–Ω–∏–µ —Ç–æ—á–∫–∏ –≤—ã—Å—Ç—Ä–µ–ª–∞ (–≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–µ–ª—å–±—ã)
	var shoot_offset = 60
	shoot_point.position = direction * shoot_offset

	# –°–æ–∑–¥–∞—ë–º –ø—É–ª—é
	var bullet = bullet_scene.instance()
	if bullet == null:
		print("‚ùå –ü—É–ª—è –Ω–µ —Å–æ–∑–¥–∞–ª–∞—Å—å! –ü—Ä–æ–≤–µ—Ä—å Bullet.tscn")
		return

	add_child(bullet)
	bullet.global_position = shoot_point.global_position
	print("‚úÖ –ü—É–ª—è —Å–æ–∑–¥–∞–Ω–∞")
	print("üéØ –ü–æ–∑–∏—Ü–∏—è –ø—É–ª–∏: ", bullet.global_position)

	# –ü–µ—Ä–µ–¥–∞—ë–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞
	if bullet.has_method("set_direction"):
		bullet.set_direction(direction, self)
		print("‚úÖ set_direction() –≤—ã–∑–≤–∞–Ω")
	else:
		print("‚ùå –£ –ø—É–ª–∏ –Ω–µ—Ç –º–µ—Ç–æ–¥–∞ set_direction()")
		print("–¢–∏–ø: ", bullet.get_class())
		print("–°–∫—Ä–∏–ø—Ç: ", bullet.get_script())
