extends KinematicBody2D

# --- –°–∏–≥–Ω–∞–ª—ã ---
signal player_died  # –°–∏–≥–Ω–∞–ª, –∫–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ —É–º–∏—Ä–∞–µ—Ç
signal startuem     # –£–∂–µ –µ—Å—Ç—å ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º
signal health_updated(health)  # üî• –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è HP-–±–∞—Ä–∞

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
export var speed = 200
export var jump_force = -500
export var gravity = 600
export var max_health = 100
export var invincibility_duration = 1.5  # –í—Ä–µ–º—è –Ω–µ—É—è–∑–≤–∏–º–æ—Å—Ç–∏ –ø–æ—Å–ª–µ —É—Ä–æ–Ω–∞

# --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ---
var velocity = Vector2.ZERO
var health = max_health
var is_invincible = false

# --- –£–∑–ª—ã ---
onready var sprite = $AnimatedSprite
onready var jump_sound = $jump

# --- –¢–∞–π–º–µ—Ä –¥–ª—è –Ω–µ—É—è–∑–≤–∏–º–æ—Å—Ç–∏ ---
var invincibility_timer

# üî´ –û—Ä—É–∂–∏–µ (–¥—Ä–æ–±–æ–≤–∏–∫ –∫–∞–∫ –¥–æ—á–µ—Ä–Ω–∏–π —É–∑–µ–ª)
onready var current_weapon = $Shotgun
onready var gun_point = $Shotgun/GunPoint

# üéØ –ú—É—à–∫–∞ –∏ –≤–≤–æ–¥
var current_weapon_index = 0  # 0 = Shotgun

func _ready():
	# –°–æ–∑–¥–∞—ë–º —Ç–∞–π–º–µ—Ä –¥–ª—è –Ω–µ—É—è–∑–≤–∏–º–æ—Å—Ç–∏
	invincibility_timer = Timer.new()
	invincibility_timer.wait_time = invincibility_duration
	invincibility_timer.one_shot = true
	invincibility_timer.connect("timeout", self, "_on_invincibility_end")
	add_child(invincibility_timer)

	# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–¥–æ—Ä–æ–≤—å—è
	health = max_health
	emit_signal("health_updated", health)

	# –°–∫—Ä—ã–≤–∞–µ–º –º—ã—à—å
	Input.set_mouse_mode(Input.MOUSE_MODE_HIDDEN)

func _process(delta):
	jump_sound.stop()

func _physics_process(delta):
	# –ü—Ä–∏–º–µ–Ω—è–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é
	if not is_on_floor():
		velocity.y += gravity * delta
	else:
		velocity.y = 0

	# –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
	if Input.is_action_pressed("ui_right"):
		velocity.x = speed
		sprite.play()
		emit_signal("startuem")
	elif Input.is_action_pressed("ui_left"):
		velocity.x = -speed
		sprite.play()
	else:
		velocity.x = 0
		sprite.stop()

	# –ü—Ä—ã–∂–æ–∫
	if Input.is_action_just_pressed("ui_up") and is_on_floor():
		velocity.y = jump_force
		jump_sound.play()

	# üîÑ –ü–û–í–û–†–û–¢ –°–ü–†–ê–ô–¢–ê
	if velocity.x > 0:
		sprite.flip_h = false  # –°–º–æ—Ç—Ä–∏—Ç –≤–ø—Ä–∞–≤–æ
	elif velocity.x < 0:
		sprite.flip_h = true   # –°–º–æ—Ç—Ä–∏—Ç –≤–ª–µ–≤–æ

	# –î–≤–∏–≥–∞–µ–º
	velocity = move_and_slide(velocity, Vector2.UP)

# --- –í–≤–æ–¥: –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Ä—É–∂–∏—è –∏ –≤—ã—Å—Ç—Ä–µ–ª ---
func _input(event):
	# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Ä—É–∂–∏—è (1, 2, 3)
	if event.is_action_pressed("ui_select_weapon_1"):
		current_weapon_index = 0
		print("–û—Ä—É–∂–∏–µ: Shotgun")
	elif event.is_action_pressed("ui_select_weapon_2"):
		current_weapon_index = 1
		print("–û—Ä—É–∂–∏–µ: –ü—É—Å—Ç–æ")
	elif event.is_action_pressed("ui_select_weapon_3"):
		current_weapon_index = 2
		print("–û—Ä—É–∂–∏–µ: –ü—É—Å—Ç–æ")

	# –í—ã—Å—Ç—Ä–µ–ª (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –æ—Ä—É–∂–∏–µ)
	if event.is_action_pressed("ui_attack") and current_weapon_index == 0:
		shoot()

# --- –í–´–°–¢–†–ï–õ ---
func shoot():
	if not current_weapon:
		return

	# –°–æ–∑–¥–∞—ë–º –ø—É–ª—é
	var bullet = current_weapon.bullet_scene.instance()
	add_child(bullet)
	bullet.global_position = gun_point.global_position
	var direction = (get_global_mouse_position() - gun_point.global_position).normalized()
	bullet.set_direction(direction, self)  # –Ø ‚Äî –≤–ª–∞–¥–µ–ª–µ—Ü
	# –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Äî –∫ –º—ã—à–∏
	var target = get_global_mouse_position()

	# üîç –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–∏—Å—Ç–∞–Ω—Ü–∏—é
	var distance = bullet.global_position.distance_to(target)
	if distance > current_weapon.shoot_distance:
		var overshoot = (distance - current_weapon.shoot_distance) / distance
		target = target.linear_interpolate(bullet.global_position, overshoot)

	bullet.set_direction((target - bullet.global_position).normalized())

# --- –ú–ï–¢–û–î –ü–û–õ–£–ß–ï–ù–ò–Ø –£–†–û–ù–ê ---
func take_damage(amount):
	if is_invincible:
		return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —É—Ä–æ–Ω –≤–æ –≤—Ä–µ–º—è –Ω–µ—É—è–∑–≤–∏–º–æ—Å—Ç–∏

	health -= amount
	print("–ò–≥—Ä–æ–∫ –ø–æ–ª—É—á–∏–ª —É—Ä–æ–Ω! –û—Å—Ç–∞–ª–æ—Å—å: ", health)

	# üî• –û–±–Ω–æ–≤–ª—è–µ–º UI
	emit_signal("health_updated", health)

	# –í–∫–ª—é—á–∞–µ–º –Ω–µ—É—è–∑–≤–∏–º–æ—Å—Ç—å
	is_invincible = true
	invincibility_timer.start()

	# –ú–∏–≥–∞–Ω–∏–µ —Å–ø—Ä–∞–π—Ç–∞
	sprite.modulate = Color(1, 0.5, 0.5, 1)  # –ö—Ä–∞—Å–Ω–æ–≤–∞—Ç—ã–π –æ—Ç—Ç–µ–Ω–æ–∫

	# –ï—Å–ª–∏ –∑–¥–æ—Ä–æ–≤—å–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å
	if health <= 0:
		if has_node("DieSound"):
			$DieSound.play()
		die()

# --- –û–ö–û–ù–ß–ê–ù–ò–ï –ù–ï–£–Ø–ó–í–ò–ú–û–°–¢–ò ---
func _on_invincibility_end():
	is_invincible = false
	sprite.modulate = Color(1, 1, 1, 1)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ü–≤–µ—Ç

# --- –°–ú–ï–†–¢–¨ –ò–ì–†–û–ö–ê ---
func die():
	print("–ò–≥—Ä–æ–∫ –ø–æ–≥–∏–±!")
	velocity = Vector2.ZERO
	emit_signal("player_died")
	queue_free()  # –£–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–∫–∞

# --- –û–ë–†–ê–ë–û–¢–ö–ê –°–¢–û–õ–ö–ù–û–í–ï–ù–ò–ô ---
func _on_Area2D_body_entered(body):
	# –ï—Å–ª–∏ –ø—É–ª—è –ø–æ–ø–∞–ª–∞ –≤ –∏–≥—Ä–æ–∫–∞
	if body.is_in_group("bullet"):
		body.queue_free()  # –£–¥–∞–ª—è–µ–º –ø—É–ª—é
		take_damage(20)    # –ù–∞–Ω–æ—Å–∏–º —É—Ä–æ–Ω
